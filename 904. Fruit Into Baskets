class Solution {
    public int totalFruit(int[] fruits) {
        int n = fruits.length;
        int left = 0;
        int right = 0;
        int maxLen = 0;
        HashMap<Integer, Integer> map = new HashMap();

        while (right < n) {
            map.put(fruits[right], map.getOrDefault(fruits[right], 0) + 1);
            if (map.size() > 2) {
                while (map.size() > 2) {
                    map.put(fruits[left], map.getOrDefault(fruits[left], 0) - 1);
                    if (map.get(fruits[left]) == 0) {
                        map.remove(fruits[left]);
                    }
                    left++;
                }
                // System.out.println("left : " + left);
            } else {
                maxLen = Math.max(maxLen, right - left + 1);
            }
            right++;
        }
        return maxLen;
    }
}
TC - O(N)+O(N) 
SC- O(3)
