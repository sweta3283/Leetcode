/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> res = new ArrayList();
        int level = 0;
        rightTraversal(root, level, res);
        return res;
    }

    public List<Integer> rightTraversal(TreeNode node, int level, List<Integer> res) {
        if (node == null) {
            return res;
        }
        if (level == res.size()) {
            res.add(node.val);
        }
        rightTraversal(node.right, level + 1, res);
        rightTraversal(node.left, level + 1, res);
        return res;
    }
}

TC - O(N)
SC - O(H) auxilary space , in case of skewed tree, it will take space as O(N) only
