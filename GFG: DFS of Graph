class Solution {
    // Function to return a list containing the DFS traversal of the graph.
    public ArrayList<Integer> dfsOfGraph(int V, ArrayList<ArrayList<Integer>> adj) {
        boolean[] visited = new boolean[V+1];
        ArrayList<Integer> dfs = new ArrayList<Integer>();
        dfs(0,adj,visited,dfs);
        return dfs;
    }
    
    public void dfs(int startNode, ArrayList<ArrayList<Integer>> adj, boolean[] visited, ArrayList<Integer> dfs){
        dfs.add(startNode);
        visited[startNode] = true;
        for(Integer it : adj.get(startNode)){
            if(!visited[it]){
                dfs(it,adj,visited,dfs);
            }
        }
    }
}

SC - O(N) + O(N) + O(N)
TC - O(N) + O(2E)
